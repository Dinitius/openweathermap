{"version":3,"sources":["reportWebVitals.ts","Redux/types.ts","Redux/actions.ts","Redux/cardsReducer.ts","Redux/rootReducer.tsx","components/Cards.tsx","components/ModalAdd.tsx","components/ModalInfo.tsx","App.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","CREATE_CARD","LOCAL_CARD","REMOVE_CARD","SHOW_MORE","API_KEY","showMore","x","y","name","dispatch","a","fetch","res","json","data","ok","Error","status","type","payload","city","removeCard","id","createCard","form","location","index","console","log","getLocalCard","initialState","cards","localCard","cardInfo","deleteCard","state","itemId","findIndex","slice","Initial","useDispatch","window","onload","navigator","geolocation","getCurrentPosition","position","startPos","coords","longitude","latitude","rootReducer","combineReducers","createCards","action","concat","mapDispatchToProps","connect","allCards","handleModal","length","map","card","className","onClick","coord","lon","lat","toString","Math","round","main","temp","src","weather","icon","alt","closeModal","useState","setForm","changeHandler","event","target","value","enabled","onSubmit","preventDefault","htmlFor","onChange","disabled","lastOne","info","document","querySelector","classList","add","daily","dt","day","local","isAddModalVisible","setIsAddModalVisible","isInfoModalVisible","setIsInfoModalVisible","handleAddModal","handleInfoModal","remove","current","Date","now","store","createStore","compose","applyMiddleware","thunk","app","render","getElementById"],"mappings":"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","file":"static/js/main.0fecef3e.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export const CREATE_CARD = 'CARD/CREATE_CARD'\r\nexport const LOCAL_CARD = 'CARD/LOCAL_CARD'\r\nexport const REMOVE_CARD = 'CARD/REMOVE_CARD'\r\nexport const SHOW_MORE = 'CARD/SHOW_MORE'","import {CREATE_CARD, LOCAL_CARD, REMOVE_CARD, SHOW_MORE} from \"./types\";\r\nimport {InewCard} from \"../components/ModalAdd\";\r\n\r\ntype Tcoords = {\r\n    x: number\r\n    y: number\r\n}\r\n\r\nconst API_KEY = \"34f77aee4b9d8e4a73495da7c1093aab\"\r\n\r\nfunction getLocalCard({x, y}: Tcoords) {\r\n    return async (dispatch: any) => {\r\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${y}&lon=${x}&lang=ru&units=metric&appid=${API_KEY}`)\r\n        const data = await res.json()\r\n        if (!res.ok) {\r\n            throw new Error(`Произошла ошибка ${res.status}`);\r\n        }\r\n        dispatch({ type: LOCAL_CARD, payload: data})\r\n    }\r\n}\r\n\r\nexport function showMore(x: number, y: number, name: string) {\r\n    return async (dispatch: any) => {\r\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${y}&lon=${x}&lang=ru&units=metric&appid=${API_KEY}`)\r\n        const data = await res.json()\r\n        if (!res.ok) {\r\n            throw new Error(`Произошла ошибка ${res.status}`);\r\n        }\r\n        dispatch({type: SHOW_MORE, payload: data, city: name})\r\n    }\r\n}\r\n\r\nexport function removeCard(id: number) {\r\n    return (dispatch: any) => {\r\n        dispatch({ type: REMOVE_CARD, payload: id})\r\n    }\r\n}\r\n\r\nexport function createCard(form: InewCard) {\r\n    return async (dispatch: any) => {\r\n        const res = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${form.location}&${form.index}&lang=ru&units=metric&appid=${API_KEY}`)\r\n        const data = await res.json()\r\n        console.log(res)\r\n        if (!res.ok) {\r\n            throw new Error(`Произошла ошибка ${res.status}`);\r\n        }\r\n        dispatch({ type: CREATE_CARD, payload: data})\r\n    }\r\n}\r\n\r\nexport default getLocalCard","import Icard, {IInfo} from \"../components/interfaces\";\r\nimport {CREATE_CARD, LOCAL_CARD, REMOVE_CARD, SHOW_MORE} from \"./types\";\r\nimport getLocalCard from \"./actions\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\ninterface Initial {\r\n    cards: Icard[],\r\n    localCard: [],\r\n    cardInfo: IInfo[]\r\n}\r\nconst initialState: Initial = {\r\n    cards: [],\r\n    localCard: [],\r\n    cardInfo: []\r\n}\r\n\r\nconst Initial = () => {\r\n    const dispatch = useDispatch()\r\n    window.onload = function() {\r\n        const geoSuccess = function(position: any) {\r\n            const startPos = position\r\n            const coords = {\r\n                x: startPos.coords.longitude,\r\n                y: startPos.coords.latitude\r\n            }\r\n            console.log(coords)\r\n            dispatch(getLocalCard(coords))\r\n        }\r\n        navigator.geolocation.getCurrentPosition(geoSuccess);\r\n    }\r\n}\r\n\r\n\r\nconst deleteCard = (state: Initial, itemId: number) => {\r\n    const index = state.cards.findIndex(({id}) => id === itemId)\r\n    return {...state, cards: [...state.cards.slice(0, index), ...state.cards.slice(index + 1)]}\r\n}\r\n\r\nexport const cardsReducer = (state: Initial = initialState, action: any) => {\r\n    switch (action.type) {\r\n        case CREATE_CARD:\r\n            return { ...state,  cards: state.cards.concat(action.payload)}\r\n        case LOCAL_CARD:\r\n            return { ...state,  localCard: state.localCard.concat(action.payload)}\r\n        case REMOVE_CARD:\r\n            return deleteCard(state, action.payload)\r\n        case SHOW_MORE:\r\n            return { ...state,  cardInfo: state.cardInfo.concat({...action.payload, name: action.city})}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport default Initial\r\n","import {combineReducers} from \"redux\";\r\nimport { cardsReducer } from \"./cardsReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    createCards: cardsReducer\r\n})","import React, {PropsWithChildren, useEffect} from 'react'\r\nimport {connect, useDispatch, useSelector} from \"react-redux\";\r\nimport getLocalCard, {createCard, removeCard, showMore} from '../Redux/actions'\r\nimport Icard from \"./interfaces\";\r\n\r\ninterface Tprops {\r\n    allCards: Icard[],\r\n    handleModal: () => void,\r\n}\r\n\r\nconst Cards = ({allCards, handleModal}: Tprops) => {\r\n    const dispatch = useDispatch()\r\n    const cards: Icard[] = allCards\r\n    return (\r\n        <ul>\r\n            {\r\n                (!cards.length) ? '' :\r\n                    cards && cards.map((card: Icard, index: number) => {\r\n                    return (\r\n                        <li className=\"newCard mb-3\" key={index}>\r\n                            <div className=\"card border border-secondary col-9\"\r\n                                 onClick={async () => {\r\n                                     await dispatch(showMore(card.coord.lon, card.coord.lat, card.name))\r\n                                     handleModal()}} id={card.id.toString()}>\r\n                                <div className=\"card-body\">\r\n                                    <h5 className=\"location\">{card.name}</h5>\r\n                                    <p className=\"weather fs-4\">{Math.round(card.main.temp)}</p>\r\n                                    <img src={`http://openweathermap.org/img/wn/${card.weather[0].icon}.png`} alt=\"img\"/>\r\n                                </div>\r\n                            </div>\r\n                        <img src=\"https://i.ibb.co/gVnqTZf/delete.png\" alt=\"delete\" className=\"del\" onClick={() => dispatch(removeCard(card.id))}></img>\r\n                        </li>\r\n                    )\r\n                }\r\n               )}\r\n        </ul>\r\n    )}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        allCards: state.createCards.cards\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    createCard,\r\n    removeCard,\r\n    showMore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cards)\r\n\r\n\r\n","import React from \"react\"\r\nimport { useState } from \"react\"\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport { createCard } from '../Redux/actions'\r\nimport \"./Modal.css\"\r\n\r\n\r\nexport interface InewCard {\r\n    location: string,\r\n    index: string,\r\n}\r\n\r\ntype Tprops = {\r\n    closeModal: () => void,\r\n}\r\n\r\n\r\nconst ModalAdd = ({ closeModal }: Tprops) => {\r\n    const dispatch = useDispatch()\r\n    const [form, setForm] = useState({\r\n        location: '',\r\n        index: ''\r\n    })\r\n\r\n    const submitHandler = (event: React.ChangeEvent<HTMLFormElement>) => {\r\n        event.preventDefault()\r\n        if (form.location !== '' && form.index !== '') {\r\n            createCard(form)\r\n            closeModal();\r\n            setForm({location: '', index: ''})\r\n        }\r\n    }\r\n\r\n    const changeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setForm({...form, [event.target.name]: event.target.value})\r\n    }\r\n\r\n    const enabled = form.location.length > 0 && form.index.length > 0\r\n\r\n    return (\r\n                <div className=\"mod modalAdd col-6\">\r\n                    <form onSubmit={submitHandler}>\r\n                        <div className=\"mb-5\">\r\n                            <label htmlFor=\"exampleInputEmail1\" className=\"form-label\">Название города</label>\r\n                            <input type=\"text\"\r\n                                   className=\"form-control\"\r\n                                   value={form.location}\r\n                                   name=\"location\"\r\n                                   onChange={changeHandler}/>\r\n                        </div>\r\n                        <div className=\"mb-3 mb-5\">\r\n                            <label htmlFor=\"exampleInputPassword1\" className=\"form-label\">Индекс города</label>\r\n                            <input type=\"text\"\r\n                                   className=\"form-control\"\r\n                                   value={form.index}\r\n                                   name=\"index\"\r\n                                   onChange={changeHandler}/>\r\n                        </div>\r\n                        <button type=\"submit\" disabled={!enabled}\r\n                                className=\"btn btn-primary\"\r\n                                onClick={() => dispatch(createCard(form))}>Добавить</button>\r\n                    </form>\r\n                </div>\r\n            )\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    createCard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ModalAdd)","import React from \"react\"\r\nimport {connect} from \"react-redux\";\r\nimport './Modal.css'\r\n\r\nconst ModalInfo = (cardInfo: any) => {\r\n    const closeInfoModal = () => {\r\n        const closeBtn = document.querySelector('.modalInfo')\r\n        closeBtn!.classList.add('hide')\r\n    }\r\n    let card = cardInfo.info\r\n    return (\r\n        <div className=\"mod modalInfo hide col-6\">\r\n            <div className=\"modalHeader mt-3 mb-5\">\r\n                <h3 className=\"cardTitle\">{card.name}</h3>\r\n                <button className='btn ' onClick={closeInfoModal}>X</button>\r\n            </div>\r\n            <ul>\r\n                <li className=\"newCard mb-3\" key={card.daily[0].dt.toString()}>\r\n                    <div className=\"card col-9\"  id={card.daily[0].dt.toString()}>\r\n                        <div className=\"card-body infoCardBody\">\r\n                            <p className=\"today\">Сегодня</p>\r\n                            <div className=\"info\">\r\n                                <p className=\"weather mb-0 fs-4\">{Math.round(card.daily[0].temp.day)}</p>\r\n                                <img src={`http://openweathermap.org/img/wn/${card.daily[0].weather[0].icon}.png`} alt=\"img\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"newCard mb-3\" key={card.daily[1].dt.toString()}>\r\n                    <div className=\"card col-9\"  id={card.daily[1].dt.toString()}>\r\n                        <div className=\"card-body infoCardBody\">\r\n                            <p className=\"today\">Завтра</p>\r\n                            <div className=\"info\">\r\n                                <p className=\"weather mb-0 fs-4\">{Math.round(card.daily[1].temp.day)}</p>\r\n                                <img src={`http://openweathermap.org/img/wn/${card.daily[1].weather[0].icon}.png`} alt=\"img\"/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state: any) => {\r\n    const lastOne = state.createCards.cardInfo.length - 1\r\n    return {\r\n        info: state.createCards.cardInfo[lastOne]\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, null)(ModalInfo)","import React, {useState} from 'react'\r\nimport Cards from \"./components/Cards\"\r\nimport ModalAdd from \"./components/ModalAdd\"\r\nimport getLocalCard, {showMore} from '../src/Redux/actions'\r\nimport \"./App.css\"\r\nimport {connect, useDispatch} from \"react-redux\";\r\nimport ModalInfo from \"./components/ModalInfo\";\r\nimport Initial from '../src/Redux/cardsReducer'\r\n\r\nconst App = (local: any) => {\r\n    Initial()\r\n    const dispatch = useDispatch()\r\n    const card = local.local\r\n    const [isAddModalVisible, setIsAddModalVisible] = useState(false)\r\n    const [isInfoModalVisible, setIsInfoModalVisible] = useState(false)\r\n    const handleAddModal = () => {\r\n        setIsAddModalVisible(!isAddModalVisible)\r\n    }\r\n\r\n    const handleInfoModal = () => {\r\n        setIsInfoModalVisible(!isAddModalVisible)\r\n        const closeBtn = document.querySelector('.modalInfo')\r\n        closeBtn!.classList.remove('hide')\r\n    }\r\n    if (card.length) {\r\n        return (\r\n            <div className=\"container pt-5\">\r\n                <div className=\"row\">\r\n                    <div className=\"col-8\">\r\n                        <ul>\r\n                            <div className=\"card border border-secondary col-9\" key={Date.now().toString()}>\r\n                                <div className=\"card-body\"\r\n                                     onClick={async () => {\r\n                                         await dispatch(showMore(card[0].lon, card[0].lat, \"Мое Местоположение\"))\r\n                                         handleInfoModal()}}>\r\n                                    <h5 className=\"location\">Мое местоположение</h5>\r\n                                    <p className=\"weather fs-4\">{Math.round(card[0].current.temp)}</p>\r\n                                    <img src={`http://openweathermap.org/img/wn/${card[0].current.weather[0].icon}.png`}\r\n                                         alt=\"img\"/>\r\n                                </div>\r\n                            </div>\r\n                        </ul>\r\n                        <Cards handleModal={handleInfoModal}/>\r\n                        <img src=\"https://i.ibb.co/kqNTvRf/add.png\" className=\"addBtn\" onClick={() => {handleAddModal()}}alt=\"add\"></img>\r\n                    </div>\r\n                    {isAddModalVisible && <ModalAdd closeModal={handleAddModal}/>}\r\n                    {isInfoModalVisible && <ModalInfo />}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    return <p>\r\n    </p>\r\n}\r\nconst mapStateToProps = (state: any) => {\r\n    return {\r\n        local: state.createCards.localCard,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    getLocalCard,\r\n    showMore\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport {render} from 'react-dom';\r\nimport {compose, createStore, applyMiddleware} from \"redux\";\r\nimport {Provider} from 'react-redux'\r\nimport thunk from 'redux-thunk'\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {rootReducer} from \"./Redux/rootReducer\";\r\nimport App from './App';\r\n\r\nconst store = createStore(rootReducer, compose(\r\n    applyMiddleware(\r\n        thunk\r\n    )\r\n))\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>\r\n)\r\n\r\nrender(\r\n    app, document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}